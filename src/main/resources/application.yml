spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  application:
    name: bank-cards-system

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:bankcards}
    username: ${DB_USERNAME:bankcards}
    password: ${DB_PASSWORD:bankcards}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  liquibase:
    change-log: classpath:db/migration/db.changelog-master.yaml
    enabled: true

server:
  port: ${SERVER_PORT:8080}

logging:
  level:
    com.example.bankcards: INFO
    org.springframework.security: INFO
    org.liquibase: INFO

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours

# Application Configuration
app:
  encryption:
    key: ${CARD_ENCRYPTION_KEY:MyCardKey1234567} # 16 symbols for AES-128

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    max-age: ${CORS_MAX_AGE:3600}


springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    url: /openapi.yaml

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized
